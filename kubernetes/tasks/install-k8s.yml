---
  - name: setup swapoff
    ansible.builtin.shell: swapoff -a

  - name: modulos do kernel
    ansible.builtin.shell: |
      cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
      overlay
      br_netfilter
      EOF

      modprobe overlay
      modprobe br_netfilter

  - name: configurando parametros
    ansible.builtin.shell: |
      cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
      EOF


  # - name: instalar pacotes kubernetes
  #   ansible.builtin.shell: |
  #     curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  #     echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  #     apt-get update
  #     apt-get install -y kubelet kubeadm kubectl
  #     apt-mark hold kubelet kubeadm kubectl

  # - name: instalar o containerd
  #   ansible.builtin.shell: |
  #     apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
  #     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  #     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  #     apt-get update && sudo apt-get install -y containerd.io

  # - name: configurando o containerd
  #   ansible.builtin.shell: |
  #     containerd config default | sudo tee /etc/containerd/config.toml
  #     sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  #     systemctl restart containerd
  #     systemctl status containerd

  - name: Install the dependencies for adding repositories
    ansible.builtin.shell: |
      apt-get update
      apt-get install -y software-properties-common curl  
  
  - name: Download Kubernetes repository key
    ansible.builtin.get_url:
      url: https://pkgs.k8s.io/core:/stable:/1.28.1/deb/Release.key
      dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  
  - name: Convert key to gpg format
    ansible.builtin.command:
      cmd: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  # - name: Add the Keys of Kubernetes repository
  #   ansible.builtin.shell: |
  #     curl -fsSL https://pkgs.k8s.io/core:/stable:/1.28.1/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  - name: Add the Kubernetes repository
    ansible.builtin.shell: |
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/1.28.1/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list

  # - name: Add the Keys CRI-O repository
  #   ansible.builtin.shell: |
  #     curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
  
  # - name: Add the Keys CRI-O repository
  #   ansible.builtin.shell: |
  #     echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/stable:/v1.31/deb/ /" | tee /etc/apt/sources.list.d/cri-o.list

  # - name: UPDATE REPOS
  #   ansible.builtin.shell: |
  #     apt-get update

  # - name: Install the packages
  #   ansible.builtin.shell: |
  #     apt-get install -y cri-o kubelet kubeadm kubectl

  # - name: Start cri-o
  #   ansible.builtin.shell: |
  #     systemctl start crio.service
  #     systemctl enable crio.service

  # - name: habilitando o kubelet
  #   ansible.builtin.shell: |
  #     systemctl enable --now kubelet